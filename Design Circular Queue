// LeetCode 622
// Design Circular Queue
class MyCircularQueue {

    int[] arr;
    int size;
    int i;
    int front;
    int rear;
    
    public MyCircularQueue(int k) {
        arr = new int[k];
        size = k;
    }
    
    public boolean enQueue(int value) {
        if(isFull())
            return false;
        arr[rear] = value;
        rear = (rear+1) % size;
        i++;
        return true;
    }
    
    public boolean deQueue()
    {
        if(isEmpty())
            return false;
        front = (front+1) % size;
        i-- ;
        return true;
        
    }
    
    public int Front() {
        if(isEmpty())
            return -1;
        return arr[front];
    }
    
    public int Rear() {
        if(isEmpty())
            return -1;
        return arr[(rear - 1 + size) % size];
    }
    
    public boolean isEmpty() {
        return i == 0;
    }
    
    public boolean isFull() {
        return i == size;
    }
}
