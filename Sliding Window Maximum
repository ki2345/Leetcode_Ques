//LeetCode 239
//Sliding Window Maximum -- Hard
//solved using Deque
class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        Deque<Integer> dq = new LinkedList<Integer>();
        int[] res = new int[nums.length-k+1];
        int j = 1;
        for(int i=0;i<k;i++){
            while(!dq.isEmpty() && nums[i] > nums[dq.getLast()]){
                dq.removeLast();
            }
            dq.add(i);  //add  last
        }
        res[0] = nums[dq.getFirst()];
        for(int i=k;i<nums.length;i++){
            while(!dq.isEmpty() && nums[i] > nums[dq.getLast()]){
                dq.removeLast();
            }
            dq.add(i);
            if(!dq.isEmpty() && dq.getFirst() == i-k){
                dq.removeFirst();
            }
            res[j] = nums[dq.getFirst()];
            j++;
        }
        return res;
    }
}
