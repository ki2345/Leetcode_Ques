//LeetCode 279
//Perfect Squares -- Medium
public class Solution {
    private int minSquares(int n, int[] dp){
        if(n == 0)
            return 0;
        if(dp[n] != -1)
            return dp[n];
        // We can select only those perfect squares which can contribute to sum up to n
        int minCount = Integer.MAX_VALUE;
        for(int i=1;i*i<=n;i++){
            int res = 1 + minSquares(n-i*i, dp);
            minCount = Math.min(minCount, res); // 1 is for selecting one square number
        }
        return dp[n] = minCount;
    }
    public int numSquares(int n){
        int[] dp = new int[n + 1];
        Arrays.fill(dp, -1);
        return minSquares(n, dp);
    }
}
