//LeetCode 312
//Burst Balloons -- Hard
//solved using DP( Top-down approach )
class Solution {
    public int maxCoins(int[] nums) {
        int[] dp = new int[nums.length + 2];
        dp[0] = dp[dp.length - 1] = 1;
        for(int i=1;i<dp.length-1;i++){
            dp[i] = nums[i - 1];
        }
        int[][] dp1 = new int[dp.length][dp.length];
        for(int[] a : dp1){
            Arrays.fill(a, -1);
        }
        return Burst(dp, 0, dp.length-1, dp1);
    }
    public static int Burst(int[] dp, int si, int ei, int[][] dp1){
        if(si + 1 == ei){
            return 0;
        }
        if(dp1[si][ei] != -1){
            return dp1[si][ei];
        }
        int ans = Integer.MIN_VALUE;
        for(int k=si+1;k<ei;k++){
            int left = Burst(dp, si, k, dp1);
            int right = Burst(dp, k, ei, dp1);
            int self = dp[si] * dp[k] * dp[ei];
            ans = Math.max(ans, self + left + right);
        }
        return dp1[si][ei] = ans;
    }
}
