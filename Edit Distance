//LeetCode 72
//Edit Distance -- Medium
class Solution {
    public int minDistance(String word1, String word2) {
        int[][] dp = new int[word1.length()][word2.length()];
        for(int[] a : dp){
            Arrays.fill(a, -1);
        }
        return helper(word1, word2, 0, 0, dp);
    }
    public static int helper(String s1, String s2, int i, int j, int[][] dp){
        if(i == s1.length()){
            return s2.length() - j;
        }
        if(j == s2.length()){
            return s1.length() - i;
        }
        if(dp[i][j] != -1){
            return dp[i][j];
        }
        int ans = 0;
        if(s1.charAt(i) == s2.charAt(j)){
            ans = helper(s1, s2, i+1, j+1, dp);
        }
        else{
            int delete = helper(s1, s2, i+1, j, dp);
            int insert = helper(s1, s2, i, j+1, dp);
            int replace = helper(s1, s2, i+1, j+1, dp);
            ans = Math.min(delete, Math.min(insert, replace)) + 1;
        }
        return dp[i][j] = ans;
    }
}
