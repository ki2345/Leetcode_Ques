//LeetCode 109
// Convert Sorted List to Binary Search Tree -- Medium
//solved using binary search algorithm
class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        if(head == null)
            return null;
        List<Integer> al = new ArrayList<>();
        while(head != null){
            al.add(head.val);
            head = head.next;
        }
        return helper(al, 0, al.size()-1);
    }
    public TreeNode helper(List<Integer> al, int left, int right){
        if(left > right){
            return null;
        }
        int mid = left + (right - left) / 2;
        TreeNode root = new TreeNode(al.get(mid));
        root.left = helper(al, left, mid-1);
        root.right = helper(al, mid+1, right);
        return root;
    }
}
