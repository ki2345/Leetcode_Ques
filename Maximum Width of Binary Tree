//LeetCode 662
//Maximum Width of Binary Tree -- Medium
//Using BFS
class Solution {
    class Node{
        TreeNode node;
        int index;
        Node(TreeNode node,int index){
            this.node = node;
            this.index = index;
        }
    }
    public int widthOfBinaryTree(TreeNode root) {
        Queue<Node> q = new LinkedList<>();
        q.add(new Node(root,0));
        int max = 0;
        while(!q.isEmpty()){
            int size = q.size();
            int s = 0;
            int e = 0;
            for(int i=0;i<size;i++){
                Node curr = q.remove();
                int j = curr.index;
                if(i == 0)
                    s = j;
                if(i == size - 1)
                    e = j;
                if(curr.node.left != null){
                    q.add(new Node(curr.node.left, 2 * curr.index));
                }
                if(curr.node.right != null){
                    q.add(new Node(curr.node.right, 2 * curr.index + 1));
                }
            }
            max = Math.max(max, e - s + 1);
        }
        return max;
    }
}
