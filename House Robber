//LeetCode 198
//House Robber -- Medium
class Solution {
    public int rob(int[] nums) {
        int r1 = 0;
        int r2 = 0;
        int max = 0;
        for(int element : nums){
            max = Math.max(element + r1, r2);
            r1 = r2;
            r2 = max;
        }
        return max;
    }
}

//using dp
class Solution {
    public int rob(int[] nums) {
        int[] dp = new int[nums.length];
        Arrays.fill(dp,-1);
        return Robber(nums,0,dp);
    }
    public int Robber(int[] nums, int i, int[] dp){
        if(i >= nums.length){
            return 0;
        }
        if(dp[i] != -1){
            return dp[i];
        }
        int chori = nums[i] + Robber(nums,i+2,dp);
        int nochori = Robber(nums,i+1,dp);
        return dp[i] = Math.max(chori,nochori);
    }
}
