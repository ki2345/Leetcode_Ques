//LeetCode 98
//Validate Binary Search Tree -- Medium
class BSTpair{
    boolean isBST = true;
    long min = Long.MAX_VALUE;
    long max = Long.MIN_VALUE;
}
class Solution {
    public boolean isValidBST(TreeNode root) {
        return helper(root).isBST;
    }
    public BSTpair helper(TreeNode root){
        if(root == null){
            return new BSTpair();
        }
        BSTpair lbp = helper(root.left);
        BSTpair rbp = helper(root.right);
        BSTpair selfbp = new BSTpair();
        selfbp.max = Math.max(lbp.max,Math.max(rbp.max,root.val));
        selfbp.min = Math.min(lbp.min,Math.min(rbp.min,root.val));
        if(lbp.isBST && rbp.isBST && lbp.max < root.val && rbp.min > root.val){
            selfbp.isBST = true;
        }
        else
            selfbp.isBST = false;
        return selfbp;
    }
}
